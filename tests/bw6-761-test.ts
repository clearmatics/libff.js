// Copyright (c) 2015-2020 Clearmatics Technologies Ltd
//
// SPDX-License-Identifier: LGPL-3.0+

import * as bw6_761 from '../src/bw6-761'


const fr_minus_2 = Buffer.from(
  "0000000000000000000000000000000001ae3a4617c510eac63b05c06ca1493b1a22d9f300f5138f1ef3622fba094800170b5d44300000008508bfffffffffff",
  'hex')

const g1_2 = Buffer.from(
  "00bdd3187c4a57477dd0830d8bb83a85593798ea1a55668c8ecba3db496e132a1dd339c5fcb2cefd718d5a50f4083d3b410e83135fec7197210145ae4ddce934ec0888cb1a408ae8288edb780c1e18371da1be3a02b2f487bfa7095e760be81a009413f554540d560317eec4f050678f69354e9e935feee8baadbf7a2ec004039163ac1bf31a15f64a820dc5ae9b84c818b321d8db0883bf4861a68212b8aa03ab23a88b0115e974e18db5c0970deb0e7130dba6f54da5179dc19db66d2fdf2a",
  'hex')

const g1_3 = Buffer.from(
  "00ad4c3f7294388e5fc6efee4fe3453ff23479311d42a7252d3bf4c7c9b4227dddb937dedd5dad407dc243967ef25d38d6e8e31f8692ddd3df98af5e7e0d97765a551109795fac68ecf407d6e11ef6f3b1067366fc51e3be4a6102a57f98ad7600f596f9e74dafd5dbc4ff19e4029e145329a084b9c7f2a6e9d11269b03dc808de4453b200eda5577079dc5befe40303f4daeb118fc86bc62066e5cac871a7c9f33812d549493a2ffafbd8a06079ad32e1e3a1f93b95852bededf9d73fbb8c27",
  'hex')

const g1_4 = Buffer.from(
  "009b512f473767b3e84f621c1efb9a875b0ae1d623dd0ac1fd29354688311902fcad849275945122751e5b564e8ffd4939174982282da32feb69c2fa8d9c32d92f8e3825f390bf75fc4a8554b2c1367f1a4d92ff40539b4bfc2cba0298b46a820081b87ff3a0887d2f892a8612e47d89b11140beaccdfc5f269fe046da6355ea4a954be341b294ff4ea27bc8926192867adde574fc5ee4310bc502c42f297601f172a930d1e62b8a05ce451ede1a5d4ea67f8ecd1c49ad47388257f60a7dc91a",
  'hex')

const g1_6 = Buffer.from(
  "00760cbf3c77666f2cba2ffb4401e3830697a50fe7a46c2f977b37cb5426a6b6cc8b6490bff2cf4562cb257e40f125d63f2a6253191df6dfed26c3e04ea99fd31ce4f347362471546de61475ea28dfaffae215beca593115e51f11d5590ce44300e01244b4533b8aef899bbc446a8b772a20b1cbd837226f41667505467dcbc76606a730e8f55a651e3e5ffb15f213d2def6835ab538138092a86d1b27f56c42483645bdf02337291594523fe6f46a7890e31fc1a527a3fffd21fb31e735da5e",
  'hex')

const g1_minus_8 = Buffer.from(
  "00c7c9438e7e51aa9360612e3cedb297517ebd7a071571b771d86f68c9ec1b280cbcccffdb49ce6e9f77adfa85aae465d0d3c60eec959a99e296042bb6522505a25a4b9ac5a5d224d1ed2c9f6644ab31d68796d3cdf6f3b8ece3f7d4b4054f4500c928123944451fa0883338f0b276d15d9611296f0e7a91917dbfd26ee41ef9d78804ff89c3227e0551f137336da94c2fdffae9278891edf276515b2290d5b128bb85601e4ec30ad02d4029376847c58934f3708b6f7e23142602a313f68c33",
  'hex')

const g2_4 = Buffer.from(
  "01097dd101de6bf3b912733c275cb45229472010d95a11ca7233143700b53c0aefbf4735dc01205b0ec034adde5a4a2bb4a7d4f8ed017002cb57b465a21f3d207f55dacbcf557822f0bdddc84441cccbf78361cf3a392f4097290be8b495059c00b57e703ff7a1dbd38c2573e6f09a85c48ebea4ad6734b7a6bed68f1565b1f980036420c5b80d550bb785b915492f8a3db71c06939d283fe910e62332228b9657d659fa4836afac6ff16c84641d8989e7ef6f159e2f7697470a44ecbf8005aa",
  'hex')

const g2_8 = Buffer.from(
  "0099155657cfbc579c893f9052bc8e431718c6aaf22583ff79d22b3eb30daaa31ea7def53f90c5719c38599490604cf0447c30b495723f16468a4c4cbcdcf3be3564274269ddd9e0b376d98ddd1cae3293eeeb7cfe1e0b937db9e60b56c5f6b1011a9fcd05529c46d7d5c226edea31829dd897465f3a4a2773cb88179324ccff6b0d4bf3dd95bbeb000db16f27cee591f949aa6f6df17cec9a63dc660f4aa79fed5512a98239b73fdff458e7c0e09b9d246e3f5681429affc2b1f7e2fcbd1141",
  'hex')


test('bw6-761-ecadd', () => {
  var output = Buffer.alloc(bw6_761.g1_bytes)
  expect(bw6_761.ecadd(g1_2, g1_4, output)).toBe(true)
  expect(output).toStrictEqual(g1_6)
})

test('bw6-761-ecmul', () => {
  var output = Buffer.alloc(bw6_761.g1_bytes)
  expect(bw6_761.ecmul(g1_4, fr_minus_2, output)).toBe(true)
  expect(output).toStrictEqual(g1_minus_8)
})

test('bw6-761-ecpairing', () => {
  expect(bw6_761.ecpairing([
    g1_6, g2_4, g1_3, g2_8, g1_4, g2_4, g1_minus_8, g2_8,
  ])).toBe(true)

  expect(bw6_761.ecpairing([
    g1_6, g2_4, g1_3, g2_8, g1_4, g2_4, g1_minus_8, g2_4
  ])).toBe(false)
})
